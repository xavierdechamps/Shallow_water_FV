
message ( "Entering in the configuration file CMake.config" )

# General options / Flags #########################################################
set ( Windows           ON CACHE BOOL "Is it a Windows-based environment?" )

# The option /heap-arrays gets rid of the stackoverflow error (not enough memory)
set (CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} /heap-arrays:0 /QxSSE4.2")

#set ( CMAKE_Fortran_FLAGS_DEBUG   "/debug:all /debug-parameters /g /traceback" CACHE STRING "Fortran options debug" )
set ( CMAKE_Fortran_FLAGS_RELEASE "/O3" CACHE STRING "Fortran options release" )

# C compiler ######################################################################
# set ( MANGLING "UPPERCASE" CACHE STRING "The standard rename procedure for C function during the linking phase. You may choose between UPPERCASE_    lowercase_    lowercase")

##set ( CMAKE_C_FLAGS_DEBUG   "-O0 -fbounds-check" )
#set ( CMAKE_C_FLAGS_DEBUG   "/debug:all /g /traceback" )
# set ( CMAKE_C_FLAGS_RELEASE "/O3 /QxSSE4.2" )
#
# add /VERBOSE:LIB to CMAKE_EXE_LINKER_FLAGS to print additionnal info on required libraries when linking
set ( CMAKE_EXE_LINKER_FLAGS "/NODEFAULTLIB:library" )
#

# MKL BLAS if Intel compilator ####################################################
set ( BLAS_PATH "C:/Program Files (x86)/Intel/oneAPI/mkl/2021.2.0"    CACHE PATH "Path to MKL BLAS libraries" )
#
set (BLA_VENDOR Intel10_64lp) 
find_package(BLAS)
#
IF (BLAS_FOUND)
  set ( BLAS_LIB "${BLAS_LIBRARIES}" CACHE FILEPATH "Set from FindBLAS.cmake BLAS_LIBRARIES." FORCE)

  message ("BLAS_LIB from BLAS_FOUND= ${BLAS_LIB}")
  
ELSE()

  IF (DEFINED BLAS_mkl_core_dll_LIBRARY)
    set ( BLAS_LIB "${BLAS_mkl_intel_lp64_dll_LIBRARY};${BLAS_mkl_intel_thread_dll_LIBRARY};${BLAS_mkl_core_dll_LIBRARY}" CACHE FILEPATH "Set from FindBLAS.cmake BLAS_LIBRARIES." FORCE)
    message ("BLAS_LIB = ${BLAS_LIB}")
  ENDIF()

ENDIF()

# sigwatch library ################################################################
set ( SIGWATCH_LIBRARIES  "${CMAKE_SOURCE_DIR}/Libs/sigwatch.lib" CACHE PATH "Path to the SigWatch library" )
